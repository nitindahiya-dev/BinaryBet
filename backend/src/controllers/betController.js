// backend/src/controllers/betController.js
const { PrismaClient } = require('@prisma/client');
const prisma = new PrismaClient();

exports.createBet = async (req, res) => {
  const { wallet, matchId, betChoice, amount, outcome, result } = req.body;
  if (!wallet || !matchId || !betChoice || !amount || !outcome) {
    return res.status(400).json({ error: 'Missing required bet information' });
  }

  try {
    // Find the user by wallet (assumes user already exists or you can upsert here)
    const user = await prisma.user.findUnique({
      where: { wallet },
    });
    if (!user) {
      return res.status(404).json({ error: 'User not found' });
    }

    // Optionally, check that match exists (if you have matches stored)
    // For now, we assume the match exists or is created elsewhere.

    // Save the bet
    const bet = await prisma.bet.create({
      data: {
        userId: user.id,
        matchId, // Make sure matchId is valid; you can add extra validation as needed
        betChoice,
        amount: parseFloat(amount),
        outcome,
        result: parseFloat(result),
        // timestamp auto-generated by Prisma
      },
    });

    res.status(201).json(bet);
  } catch (error) {
    console.error('Error creating bet:', error);
    res.status(500).json({ error: 'Internal server error' });
  }
};
